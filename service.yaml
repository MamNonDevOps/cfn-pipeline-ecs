---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Cluster:
    Type: String
    Default: test-ecs-cluster

  DesiredCount:
    Type: Number
    Default: 2

  LaunchType:
    Type: String
    Default: EC2
    AllowedValues:
      - Fargate
      - EC2

  TargetGroupArn:
    Type: String
    Default: arn:aws:elasticloadbalancing:us-east-1:269597175775:targetgroup/test-Targe-XM1P5ECOBBAK/2e12aa0e4fda77d8

  SourceSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-0061928bb65dc3b04

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Default: subnet-08c8af468829b4fc4,subnet-0bbffa7a9dcf57f99

Conditions:
  Fargate: !Equals [ !Ref LaunchType, "Fargate" ]
  EC2: !Equals [ !Ref LaunchType, "EC2" ]

Resources:
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${AWS::StackName}

  FargateService:
    Type: AWS::ECS::Service
    Condition: Fargate
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref SourceSecurityGroup
          Subnets: !Ref Subnets
      LoadBalancers:
        - ContainerName: app
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroupArn

  EC2Service:
    Type: AWS::ECS::Service
    Condition: EC2
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: app
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroupArn

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-app-family
      RequiresCompatibilities:
        - !If [ Fargate, "FARGATE", "EC2" ]
      Cpu: 1024
      Memory: 1024
      # Memory: 2048 #With Fargate, CPU 1024 must need RAM 2048
      NetworkMode: !If [ Fargate, "awsvpc", "bridge" ]
      ExecutionRoleArn: !Ref TaskExecutionRole
      Volumes:
        - Name: main-vol
      ContainerDefinitions:
        - Name: app
          Image: nginx
          Essential: true
          Memory: 1024
          MountPoints:
            - SourceVolume: main-vol
              ContainerPath: /var/www/
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref AWS::StackName

Outputs:
  Service:
    Value: !If [ Fargate, !Ref FargateService, !Ref EC2Service ]
